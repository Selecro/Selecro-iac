- name: Create vault-main namespace
  kubernetes.core.k8s:
    name: vault-main
    api_version: v1
    kind: Namespace
    state: present

- name: Create Vault Service
  kubernetes.core.k8s:
    state: present
    namespace: vault-main
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: vault
      spec:
        selector:
          app: vault-main
        ports:
          - protocol: TCP
            port: 8200
            targetPort: 8200

- name: Create Vault Service Account
  kubernetes.core.k8s:
    state: present
    api_version: v1
    kind: ServiceAccount
    namespace: vault-main
    name: vault-main-auth

- name: Create Cluster Role for Vault
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: vault-main-auth-role
      rules:
        - apiGroups: [""]
          resources: ["pods", "services", "endpoints", "secrets"]
          verbs: ["get", "list", "watch"]
        - apiGroups: ["apps"]
          resources: ["deployments"]
          verbs: ["get", "list", "watch"]

- name: Bind Vault Role to Service Account
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: vault-main-auth-rolebinding
      subjects:
        - kind: ServiceAccount
          name: vault-main-auth
          namespace: vault-main
      roleRef:
        kind: ClusterRole
        name: vault-main-auth-role
        apiGroup: rbac.authorization.k8s.io

- name: create vault configmap
  kubernetes.core.k8s:
    state: present
    namespace: vault-main
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: vault-config
      data:
        vault.hcl: |
          storage "file" {
            path = "/vault-main/data"
          }
          ui = true
          listener "tcp" {
            address = "0.0.0.0:8200"
            tls_disable = 1
          }
          api_addr = "http://0.0.0.0:8200"
          cluster_addr = "http://0.0.0.0:8201"
          disable_mlock = true

- name: Deploy Vault (with HTTP listener)
  kubernetes.core.k8s:
    state: present
    namespace: vault-main
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: vault-main-deployment
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: vault-main
        template:
          metadata:
            labels:
              app: vault-main
          spec:
            serviceAccountName: vault-main-auth
            containers:
              - name: vault
                image: hashicorp/vault:latest
                ports:
                  - containerPort: 8200
                command:
                  - "vault"
                  - "server"
                  - "-config=/vault/config/vault.hcl"
                env:
                  - name: VAULT_ADDR
                    value: "http://127.0.0.1:8200"
                  - name: VAULT_LISTENER
                    value: "tcp"
                  - name: VAULT_HTTP_ADDR
                    value: "0.0.0.0:8200"
                volumeMounts:
                  - name: vault-data
                    mountPath: /vault-main/data
                  - name: vault-config
                    mountPath: /vault/config
            volumes:
              - name: vault-data
                hostPath:
                  path: /mnt/vault-main/data
                  type: DirectoryOrCreate
              - name: vault-config
                configMap:
                  name: vault-config

- name: Wait for Vault pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "vault-main"
  register: vault_main_pods
  until: vault_main_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
  retries: 30
  delay: 10

- name: Get Vault pod name
  shell: |
    kubectl get pods -n vault-main -o jsonpath="{.items[0].metadata.name}"
  register: vault_main_pod_name

- name: Debug Vault pod name
  debug:
    var: vault_main_pod_name.stdout

- name: Initialize Vault
  shell: |
    kubectl exec -n vault-main {{ vault_main_pod_name.stdout }} -- vault operator init -key-shares=3 -key-threshold=2 -format=json
  register: vault_init_output

- name: Parse Vault root token and unseal keys
  set_fact:
    root_token: "{{ vault_init_output.stdout | from_json | json_query('root_token') }}"
    unseal_keys: "{{ vault_init_output.stdout | from_json | json_query('unseal_keys_b64') }}"

- name: Create Kubernetes Secret for Vault credentials
  kubernetes.core.k8s:
    state: present
    namespace: vault-main
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: vault-secrets
      type: Opaque
      data:
        root_token: "{{ root_token | b64encode }}"
        unseal_key_1: "{{ unseal_keys[0] | b64encode }}"
        unseal_key_2: "{{ unseal_keys[1] | b64encode }}"
        unseal_key_3: "{{ unseal_keys[2] | b64encode }}"

- name: Debug root token
  debug:
    var: root_token

- name: Debug unseal keys
  debug:
    var: unseal_keys
