---
- name: Ensure apt cache is up to date
  apt:
    update_cache: yes

- name: Install PostgreSQL
  apt:
    name: postgresql
    state: present

- name: Ensure PostgreSQL data directory exists
  file:
    path: "/var/lib/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name_main }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'
    recurse: yes

- name: Ensure PostgreSQL cluster configuration directory exists
  file:
    path: "/etc/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name_main }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0755'
    recurse: yes

- name: Create PostgreSQL cluster (don't auto-start)
  shell: pg_createcluster {{ postgresql_version }} "{{ postgresql_cluster_name_main }}"
  args:
    creates: "/etc/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name_main }}/postgresql.conf"

- name: Deploy postgresql.conf for selecro-main
  template:
    src: postgresql.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name_main }}/postgresql.conf"
    owner: postgres
    group: postgres
    mode: '0644'

- name: Deploy pg_hba.conf for selecro-main
  template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/{{ postgresql_version }}/{{ postgresql_cluster_name_main }}/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0640'

- name: Enable and start PostgreSQL cluster
  systemd:
    name: "postgresql@{{ postgresql_version }}-{{ postgresql_cluster_name_main }}"
    enabled: yes
    state: started
  register: postgresql_start_result
  failed_when: postgresql_start_result.failed and "Failed to start" in postgresql_start_result.msg

- name: Verify PostgreSQL service is active
  command: systemctl is-active "postgresql@{{ postgresql_version }}-{{ postgresql_cluster_name_main }}"
  register: pg_service_status
  failed_when: pg_service_status.stdout != "active"
  changed_when: false

- name: Set password for postgres user
  become: yes
  shell: sudo -u postgres psql -p "{{ postgresql_port_main }}" -c "ALTER USER postgres WITH PASSWORD '{{ postgresql_password }}';"
  when: pg_service_status.stdout == "active"
